// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using USLabs.Persistence;

#nullable disable

namespace USLabs.Persistence.Migrations
{
    [DbContext(typeof(USLabsDbContext))]
    [Migration("20250527193606_MigracionInicial")]
    partial class MigracionInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.16");

            modelBuilder.Entity("USLabs.Domain.Calificacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Alumno")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comentario")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Puntaje")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("calificaciones", (string)null);
                });

            modelBuilder.Entity("USLabs.Domain.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FechaPublicacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("cursos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9f198e87-266c-4fa2-9401-d10781533e80"),
                            Descripcion = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            FechaPublicacion = new DateTime(2025, 5, 27, 19, 36, 5, 944, DateTimeKind.Utc).AddTicks(8900),
                            Titulo = "Incredible Frozen Table"
                        },
                        new
                        {
                            Id = new Guid("f8a7a0b0-6390-4d4d-a99c-0fcaa30cbe5b"),
                            Descripcion = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            FechaPublicacion = new DateTime(2025, 5, 27, 19, 36, 5, 944, DateTimeKind.Utc).AddTicks(8940),
                            Titulo = "Unbranded Cotton Mouse"
                        },
                        new
                        {
                            Id = new Guid("6072610f-7cd2-4b3b-bae1-4b46d006da34"),
                            Descripcion = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            FechaPublicacion = new DateTime(2025, 5, 27, 19, 36, 5, 944, DateTimeKind.Utc).AddTicks(8960),
                            Titulo = "Handmade Rubber Computer"
                        },
                        new
                        {
                            Id = new Guid("04136d71-7fc0-4dea-912b-57ecb156816f"),
                            Descripcion = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            FechaPublicacion = new DateTime(2025, 5, 27, 19, 36, 5, 944, DateTimeKind.Utc).AddTicks(8980),
                            Titulo = "Handcrafted Rubber Computer"
                        },
                        new
                        {
                            Id = new Guid("c6613ba9-9eb5-494d-9727-995ece9afef1"),
                            Descripcion = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            FechaPublicacion = new DateTime(2025, 5, 27, 19, 36, 5, 944, DateTimeKind.Utc).AddTicks(9030),
                            Titulo = "Handcrafted Steel Table"
                        },
                        new
                        {
                            Id = new Guid("c8a22eab-0117-4dcb-ab21-6f965178a1c5"),
                            Descripcion = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            FechaPublicacion = new DateTime(2025, 5, 27, 19, 36, 5, 944, DateTimeKind.Utc).AddTicks(9050),
                            Titulo = "Handcrafted Soft Pants"
                        },
                        new
                        {
                            Id = new Guid("8791ac0d-8c65-4f3a-8712-dde0e24a8096"),
                            Descripcion = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            FechaPublicacion = new DateTime(2025, 5, 27, 19, 36, 5, 944, DateTimeKind.Utc).AddTicks(9070),
                            Titulo = "Intelligent Plastic Sausages"
                        },
                        new
                        {
                            Id = new Guid("6d7947b5-9571-42ba-baa9-822ac7230823"),
                            Descripcion = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            FechaPublicacion = new DateTime(2025, 5, 27, 19, 36, 5, 944, DateTimeKind.Utc).AddTicks(9090),
                            Titulo = "Incredible Wooden Gloves"
                        },
                        new
                        {
                            Id = new Guid("b38eba8e-d006-4892-8606-4f6f2edf3dce"),
                            Descripcion = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            FechaPublicacion = new DateTime(2025, 5, 27, 19, 36, 5, 944, DateTimeKind.Utc).AddTicks(9100),
                            Titulo = "Incredible Wooden Ball"
                        });
                });

            modelBuilder.Entity("USLabs.Domain.CursoInstructor", b =>
                {
                    b.Property<Guid>("InstructorId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.HasKey("InstructorId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("curso_instructores", (string)null);
                });

            modelBuilder.Entity("USLabs.Domain.CursoPrecio", b =>
                {
                    b.Property<Guid>("PrecioId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.HasKey("PrecioId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("curso_precios", (string)null);
                });

            modelBuilder.Entity("USLabs.Domain.Instructor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Apellidos")
                        .HasColumnType("TEXT");

                    b.Property<string>("Grado")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("instructores", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e365656b-6ef5-4894-ba60-b9ad380d20a9"),
                            Apellidos = "Welch",
                            Grado = "District Tactics Planner",
                            Nombre = "Keira"
                        },
                        new
                        {
                            Id = new Guid("5f64f1e3-e6eb-4f22-b8d4-2de4a0744081"),
                            Apellidos = "Haag",
                            Grado = "Internal Marketing Architect",
                            Nombre = "Vernice"
                        },
                        new
                        {
                            Id = new Guid("970223b0-afd4-4b56-9053-1ef77b4ed1eb"),
                            Apellidos = "Flatley",
                            Grado = "International Response Analyst",
                            Nombre = "Germaine"
                        },
                        new
                        {
                            Id = new Guid("3880ba5c-80d0-4cb0-98a7-012ad2442475"),
                            Apellidos = "Little",
                            Grado = "Dynamic Mobility Orchestrator",
                            Nombre = "Jaron"
                        },
                        new
                        {
                            Id = new Guid("e717cee1-322d-4995-aa06-ac66d5eac4b8"),
                            Apellidos = "Marks",
                            Grado = "Human Division Representative",
                            Nombre = "Lauren"
                        },
                        new
                        {
                            Id = new Guid("43badb03-7c6b-4fe7-8cee-a051d6a943f6"),
                            Apellidos = "Cassin",
                            Grado = "Senior Accountability Manager",
                            Nombre = "Savannah"
                        },
                        new
                        {
                            Id = new Guid("144b234d-4704-4b79-ac5b-2180107b6b89"),
                            Apellidos = "Weber",
                            Grado = "Lead Solutions Administrator",
                            Nombre = "Nova"
                        },
                        new
                        {
                            Id = new Guid("8120f029-5074-434c-b094-97f86c7300c8"),
                            Apellidos = "Rath",
                            Grado = "Legacy Assurance Specialist",
                            Nombre = "Zachary"
                        },
                        new
                        {
                            Id = new Guid("edae10f9-0c55-459f-b4b5-3dcf39697dc7"),
                            Apellidos = "Halvorson",
                            Grado = "Dynamic Functionality Liaison",
                            Nombre = "Elza"
                        },
                        new
                        {
                            Id = new Guid("38cca2bb-bb55-48b0-8e88-74b9a2572131"),
                            Apellidos = "Daugherty",
                            Grado = "International Configuration Coordinator",
                            Nombre = "Ronny"
                        });
                });

            modelBuilder.Entity("USLabs.Domain.Photo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("imagenes", (string)null);
                });

            modelBuilder.Entity("USLabs.Domain.Precio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<decimal>("PrecioActual")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecioPromocion")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("precios", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("af67c31c-d7c2-462d-b712-c1faae1dea64"),
                            Nombre = "Precio regular",
                            PrecioActual = 10.0m,
                            PrecioPromocion = 5.0m
                        });
                });

            modelBuilder.Entity("USLabs.Domain.Calificacion", b =>
                {
                    b.HasOne("USLabs.Domain.Curso", "Curso")
                        .WithMany("Calificaciones")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("USLabs.Domain.CursoInstructor", b =>
                {
                    b.HasOne("USLabs.Domain.Curso", "Curso")
                        .WithMany("CursoInstructores")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("USLabs.Domain.Instructor", "Instructor")
                        .WithMany("CursoInstructores")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("USLabs.Domain.CursoPrecio", b =>
                {
                    b.HasOne("USLabs.Domain.Curso", "Curso")
                        .WithMany("CursoPrecios")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("USLabs.Domain.Precio", "Precio")
                        .WithMany("CursoPrecios")
                        .HasForeignKey("PrecioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Precio");
                });

            modelBuilder.Entity("USLabs.Domain.Photo", b =>
                {
                    b.HasOne("USLabs.Domain.Curso", "Curso")
                        .WithMany("Fotos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("USLabs.Domain.Curso", b =>
                {
                    b.Navigation("Calificaciones");

                    b.Navigation("CursoInstructores");

                    b.Navigation("CursoPrecios");

                    b.Navigation("Fotos");
                });

            modelBuilder.Entity("USLabs.Domain.Instructor", b =>
                {
                    b.Navigation("CursoInstructores");
                });

            modelBuilder.Entity("USLabs.Domain.Precio", b =>
                {
                    b.Navigation("CursoPrecios");
                });
#pragma warning restore 612, 618
        }
    }
}
